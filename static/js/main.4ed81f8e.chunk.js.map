{"version":3,"sources":["components/Header/Header.js","components/ExpenseItemList/ExpenseItemList.js","actions/expenses.js","components/ExpensesFilters/ExpensesFilters.js","actions/filters.js","selectors/expenseSelectors.js","pages/DashboardPage/DashboardPage.js","components/ExpenseForm/ExpenseForm.js","pages/CreateExpensePage/CreateExpensePage.js","pages/EditExpensePage/EditExpensePage.js","pages/NotFoundPage/NotFoundPage.js","components/Footer/Footer.js","AppRouter.js","serviceWorker.js","reducers/expensesReducer.js","reducers/filtersReducer.js","store/configureStore.js","index.js"],"names":["Header","react_default","a","createElement","className","NavLink","to","activeClassName","exact","connect","props","createdAtMoment","moment","expense","createdAt","format","description","amount","note","Link","concat","id","onClick","dispatch","expenses","JSON","parse","localStorage","getItem","filter","setItem","stringify","type","removeExpense","state","filters","startDateToFormat","startDate","endDateToFormat","endDate","handleTextFiler","value","text","handleSorting","sortBy","handleStartDate","startDateToUnix","valueOf","handleEndDate","endDateToUnix","placeholder","onChange","e","target","expenseSelectors","_ref","startDateMatch","endDateMatch","textMatch","toLowerCase","includes","sort","b","parseInt","parseFloat","getVisibleExpenses","components_ExpensesFilters_ExpensesFilters","map","components_ExpenseItemList_ExpenseItemList","key","ExpenseForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onDescriptionChange","setState","onAmountChange","match","onNoteChange","onSubmit","preventDefault","error","Date","now","Component","ExpenseForm_ExpenseForm_ExpenseForm","expenseData","arguments","length","undefined","_expenseData$id","uuid","_expenseData$descript","_expenseData$amount","_expenseData$note","_expenseData$createdA","Array","isArray","toConsumableArray","createExpense","createNewExpense","history","push","find","params","update","objectSpread","editExpense","NotFoundPage","Footer","AppRouter","BrowserRouter","components_Header_Header","Switch","Route","path","component","DashboardPage","CreateExpensePage","EditExpensePage","components_Footer_Footer","Boolean","window","location","hostname","expensesReducer","action","edits","getExpenses","filtersDefaultState","filtersReducer","composeEnhansers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","subscribe","console","log","getState","render","es","src_AppRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ed81f8e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Header.css'\r\nconst Header = () => (\r\n  <header className='headerContainer'>\r\n  <h1 className='title'>Track Your Money</h1>\r\n  <nav className='navbar'>\r\n  <NavLink to=\"/Track-Your-Money/\" activeClassName=\"is-active\" className='navLink' exact={true}>Dashboard</NavLink>\r\n  <NavLink to=\"/Track-Your-Money/create\" activeClassName=\"is-active\" className='navLink'>Create Expense</NavLink>\r\n  </nav>\r\n  </header>\r\n  );\r\n\r\n  export default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { startRemoveExpense } from '../../actions/expenses';\r\nimport './ExpenseItemList.css'\r\nconst ExpenseItemList = (props) => {\r\n const createdAtMoment = moment(props.expense.createdAt).format('MMMM Do YYYY h:mm:ss a');\r\n \r\n  return(\r\n  <div>\r\n    \r\n    <h3 className='description'>{props.expense.description}</h3> \r\n    <p><span className='amount'>${props.expense.amount} </span>- <span className='createdAt'>{createdAtMoment}</span></p>\r\n    {props.expense.note && <p className='note'><span className='spanNote'>Note:</span> {props.expense.note}</p>}\r\n    <div className='buttonsContainer'>\r\n    <button className='expenseListButtons edit'><Link className='Link' to={`/Track-Your-Money/edit/${props.expense.id}`}>Edit</Link></button>\r\n    <button className='expenseListButtons remove' onClick={() => {\r\n        props.dispatch(startRemoveExpense(props.expense.id));\r\n      }}>Remove</button>\r\n  </div>\r\n  </div>\r\n  )};\r\n \r\n\r\n  export default connect()(ExpenseItemList);\r\n\r\n\r\n","import uuid from 'uuid';\r\n\r\n//create expense action :\r\nconst createExpense = (expense) => {\r\n  return {\r\n    type: \"CREATE_EXPENSE\",\r\n    expense,\r\n  };\r\n};\r\n\r\nexport const createNewExpense = (expenseData = {}) => {\r\nreturn (dispatch) => {\r\n  const {\r\n    id = uuid(),\r\n    description = \"\",\r\n    amount = 0,\r\n    note = \"\",\r\n    createdAt = 0\r\n  } = expenseData;\r\n  const expense = {\r\n    id,\r\n    description,\r\n    amount,\r\n    note,\r\n    createdAt \r\n  }\r\n  let expenses = JSON.parse(localStorage.getItem('expenses'));\r\n  expenses = Array.isArray(expenses) ? expenses : [] ;\r\n  \r\n    localStorage.setItem('expenses', JSON.stringify([...expenses, expense]))\r\n    dispatch(createExpense(expense));\r\n  \r\n}\r\n}\r\n\r\n//edit expense action :\r\nconst editExpense = (id, update) => {\r\n  return {\r\n    type: \"EDIT_EXPENSE\",\r\n    id,\r\n    update\r\n  };\r\n};\r\n\r\nexport const startEditExpense = (id, update) => {\r\n  return (dispatch) => {\r\n    \r\n  \r\n    let expenses = JSON.parse(localStorage.getItem('expenses'));\r\n    expenses.map(expense => {\r\n      if(expense.id === id){\r\n        return {\r\n          ...expense,\r\n          ...update\r\n        };\r\n      } else {\r\n        return expense;\r\n      }\r\n    }); \r\n    \r\n      localStorage.setItem('expenses', JSON.stringify(expenses))\r\n      dispatch(editExpense(id, update));\r\n    \r\n  }\r\n  }\r\n\r\n//remove expense action :\r\nconst removeExpense = id => {\r\n  return {\r\n    type: \"REMOVE_EXPENSE\",\r\n    id\r\n  };\r\n};\r\n\r\nexport const startRemoveExpense = (id) => {\r\n  return (dispatch) => {\r\n    \r\n  \r\n    let expenses = JSON.parse(localStorage.getItem('expenses'));\r\n    expenses = expenses.filter((expense) => expense.id !== id); \r\n    \r\n      localStorage.setItem('expenses', JSON.stringify(expenses))\r\n      dispatch(removeExpense(id));\r\n    \r\n  }\r\n  }\r\n\r\n//get expenses from localstorage action :\r\nconst getExpense = getExpenses => {\r\n  \r\n  return {\r\n    type: \"GET_EXPENSES\",\r\n    getExpenses\r\n  };\r\n};\r\n\r\nexport const startGetExpense = () => {\r\n  return (dispatch) => {\r\n\r\n    let expenses = JSON.parse(localStorage.getItem('expenses'));\r\n    expenses = Array.isArray(expenses) ? expenses : [] ;\r\n    \r\n    dispatch(getExpense(expenses));\r\n     \r\n    \r\n  \r\n  }\r\n  }","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport moment from 'moment';\r\nimport { setFilterText, setFilterSortBy, setFilterStartDate, setFilterEndDate } from '../../actions/filters'\r\nimport './ExpensesFilters.css';\r\nconst ExpensesFilters = (props) => {\r\n\r\n \r\n  \r\n\r\nreturn (\r\n  <div className='filtersContainer'>\r\n    <div className='miniContainer'>\r\n      <div>\r\n        <input \r\n        type='text'\r\n        placeholder='Search an expense' \r\n        value={props.filters.text} \r\n        onChange={(e) => props.handleTextFiler(e.target.value)}\r\n        />🔍\r\n    </div>\r\n    <select value={props.filters.sortBy} onChange={(e) => props.handleSorting(e.target.value)}>\r\n    <option value=\"Amount\">Amount</option>\r\n    <option value=\"Date\">Date</option>\r\n    </select>\r\n    </div>\r\n    <div className='miniContainer'> \r\n      <input \r\n      type=\"date\" \r\n      value={props.startDateToFormat} \r\n      onChange={(e) => props.handleStartDate(e.target.value)}/>\r\n    <input type=\"date\" value={props.endDateToFormat} onChange={(e) => props.handleEndDate(e.target.value)}/>\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n\r\nconst mapStateToProps = state => ({ \r\n  expenses: state.expenses,\r\n  filters:state.filters,\r\n  startDateToFormat: moment(state.filters.startDate).format('YYYY-MM-DD'),\r\n  endDateToFormat: moment(state.filters.endDate).format('YYYY-MM-DD')\r\n })\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleTextFiler: value => {\r\n      dispatch(setFilterText(value))\r\n    },\r\n\r\n    handleSorting: value=>  {\r\n      dispatch(setFilterSortBy(value))\r\n    },\r\n\r\n    handleStartDate: value=>  {\r\n      const startDateToUnix = moment(value).valueOf();\r\n      dispatch(setFilterStartDate(startDateToUnix))\r\n    },\r\n\r\n    handleEndDate: value=>  {\r\n      const endDateToUnix = moment(value).valueOf();\r\n      dispatch(setFilterEndDate(endDateToUnix))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ExpensesFilters);","//Set the text field in the filters state\r\n\r\nexport const setFilterText = text => {\r\n  return {\r\n    type: \"SET_FILTER_TEXT\",\r\n    text\r\n  };\r\n};\r\n\r\n//Set the startDate field in the filters state\r\n\r\nexport const setFilterStartDate = startDate => {\r\n  return {\r\n    type: \"SET_START_DATE\",\r\n    startDate\r\n  };\r\n};\r\n\r\n//Set the endDate field in the filters state\r\n\r\nexport const setFilterEndDate = endDate => {\r\n  return {\r\n    type: \"SET_END_DATE\",\r\n    endDate\r\n  };\r\n};\r\n\r\n//Set the sortBy field in the filters state\r\n\r\nexport const setFilterSortBy = sortBy => {\r\n  return {\r\n    type: \"SET_FILTER_SORT_BY\",\r\n    sortBy\r\n  };\r\n};\r\n","//Function that will filters expenses :\r\n\r\nexport default (expenses, { text, sortBy, startDate, endDate }) => {\r\n  return expenses\r\n    .filter(expense => {\r\n      const startDateMatch =\r\n        typeof startDate !== \"number\" || startDate <= expense.createdAt;\r\n      const endDateMatch =\r\n        typeof endDate !== \"number\" || endDate >= expense.createdAt;\r\n      const textMatch =\r\n        expense.description.toLowerCase().includes(text.toLowerCase()) ||\r\n        expense.note.toLowerCase().includes(text.toLowerCase());\r\n\r\n      return startDateMatch && endDateMatch && textMatch;\r\n    })\r\n    .sort((a, b) =>\r\n      sortBy.toLowerCase() === \"date\"\r\n        ? -(parseInt(a.createdAt) - parseInt(b.createdAt))\r\n        : -(parseFloat(a.amount) - parseFloat(b.amount))\r\n    );\r\n};\r\n","import React from 'react';\r\nimport ExpenseItemList from '../../components/ExpenseItemList'\r\nimport ExpensesFilters from '../../components/ExpensesFilters'\r\nimport getVisibleExpenses from  '../../selectors/expenseSelectors'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\n\r\n\r\nconst DashboardPage = (props) => {\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n    <div>\r\n    <ExpensesFilters/>\r\n    </div>\r\n    {props.expenses.map(expense => <ExpenseItemList key={expense.id} expense={expense} />)}\r\n    </div>\r\n  )\r\n \r\n};\r\n\r\n  const mapStateToProps = state => ({ expenses: getVisibleExpenses(state.expenses,state.filters)})\r\n  \r\n\r\n  export default connect(mapStateToProps)(DashboardPage)\r\n  \r\n ","import React, { Component } from 'react'\r\nimport './ExpenseForm.css'\r\nexport default class ExpenseForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      description : props.expense ? props.expense.description : '',\r\n      amount: props.expense ? props.expense.amount :'',\r\n      note: props.expense ? props.expense.note :'',\r\n      createdAt: props.expense ? props.expense.createdAt : Date.now(), \r\n      error:''\r\n      }\r\n  }\r\n\r\n  \r\n\r\n    onDescriptionChange = (e) => {\r\n      const description = e.target.value;\r\n      this.setState(() => ({ description }));\r\n    }\r\n    onAmountChange = (e) => {\r\n      const amount = e.target.value;\r\n      if(!amount || amount.match(/^\\d+\\.?\\d{0,2}$/)){\r\n        this.setState(() => ({ amount }));\r\n      }\r\n      \r\n    }\r\n    onNoteChange = (e) => {\r\n      const note = e.target.value;\r\n      this.setState(() => ({ note }));\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      if (this.state.description && this.state.amount) {\r\n        this.setState(() => ({ error: '' }));\r\n        this.props.onSubmit({\r\n          description: this.state.description,\r\n          amount: this.state.amount,\r\n          createdAt: this.state.createdAt ,\r\n          note: this.state.note\r\n        });\r\n      } else {\r\n        const error = \"Please enter the Description and the Amount!\"\r\n        this.setState(() => ({ error }));\r\n      }\r\n    }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div  >\r\n      {this.state.error && <p>{this.state.error}</p>}\r\n         <form onSubmit={this.onSubmit} className='formContainer'>\r\n          <input className='formInput'\r\n          type=\"text\"\r\n          placeholder=\"Enter a Description\" \r\n          value={this.state.description} \r\n          onChange={this.onDescriptionChange} \r\n          />\r\n          <input className='formInput'\r\n          type=\"text\" \r\n          placeholder=\"Enter an Amount\"\r\n          value={this.state.amount} \r\n          onChange={this.onAmountChange} \r\n          />\r\n          <textarea className='formTextArea'\r\n          placeholder=\"Add a note for your expense (optional)\"\r\n          value={this.state.note} \r\n          onChange={this.onNoteChange} \r\n          />\r\n        <button className='formButton'>{this.props.expense ? 'Edit Expense' : 'Create New Expense' }</button>\r\n        \r\n      </form>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport ExpenseForm from '../../components/ExpenseForm'\r\nimport { createNewExpense  } from '../../actions/expenses'\r\nimport './CreateExpensePage.css'\r\nconst CreateExpensePage = (props) => (\r\n  <div className='createExpContainer'>\r\n     <h1 className='createExp'>Create an Expense</h1>\r\n    <ExpenseForm  onSubmit={(expense) => {\r\n        props.dispatch(createNewExpense(expense));\r\n        props.history.push('/Track-Your-Money/');\r\n      }} />\r\n    </div>\r\n  );\r\n\r\n\r\n\r\n \r\n  \r\n  export default connect()(CreateExpensePage);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ExpenseForm from '../../components/ExpenseForm'\r\nimport { startEditExpense} from '../../actions/expenses';\r\n\r\nconst EditExpensePage = (props) => {\r\n  return (\r\n    <div>\r\n      <ExpenseForm\r\n        expense={props.expense}\r\n        onSubmit={(expense) => {\r\n          props.dispatch(startEditExpense(props.expense.id, expense));\r\n          props.history.push('/');\r\n        }}\r\n      />\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  return {\r\n    expense: state.expenses.find((expense) => expense.id === props.match.params.id)\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EditExpensePage);"," import React from 'react';\r\n import { Link } from 'react-router-dom';\r\n\r\n const NotFoundPage = () => (\r\n   <div className='notfound'>\r\n   <h1>404-Page Not Found</h1>\r\n   <div><Link to='/Track-Your-Money/'>Please click here to be redirected to the Dasheboard</Link></div>\r\n   </div>\r\n  );\r\n\r\n  export default NotFoundPage;","import React from 'react';\r\nimport './Footer.css'\r\nconst Footer = () => (\r\n  <footer className='stickyFooter'>\r\n  <div className='copyright'>@Copyright 2018 - Made with React and Redux By Saad Mourtada</div>\r\n  </footer>\r\n  );\r\n\r\n export default Footer;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Header from './components/Header';\nimport DashboardPage from './pages/DashboardPage';\nimport CreateExpensePage from './pages/CreateExpensePage';\nimport EditExpensePage from './pages/EditExpensePage';\nimport NotFoundPage from './pages/NotFoundPage';\nimport Footer from './components/Footer';\n//import './App.css';\n\nconst AppRouter = () => (\n  <BrowserRouter>\n<div>\n  <Header/>\n  <Switch>\n<Route path=\"/Track-Your-Money/\" component={DashboardPage} exact={true} />\n<Route path=\"/Track-Your-Money/create\" component={CreateExpensePage} />\n<Route path=\"/Track-Your-Money/edit/:id\" component={EditExpensePage} />\n<Route component={NotFoundPage} />   {/* 404 route */}\n  </Switch>\n  <Footer />\n</div>\n</BrowserRouter>\n)\n  \n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//This is the expenses reducer :\r\n\r\nexport default (expenses = [], action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_EXPENSE\":\r\n      \r\n      //we use the spread operator to not touch the state\r\n      return [...expenses, action.expense];\r\n    case \"EDIT_EXPENSE\":\r\n      return expenses.map(expense => {\r\n        const edits = action.update;\r\n        if (expense.id === action.id) {\r\n          //By spreading the edits after spreading the existent expense, the updated propreties will override the existing ones.\r\n          return {\r\n            ...expense,\r\n            ...edits\r\n          };\r\n        } else {\r\n          return expense;\r\n        }\r\n      });\r\n    //The filter function does not change the state\r\n    case \"REMOVE_EXPENSE\":\r\n      return expenses.filter(({ id }) => id !== action.id);\r\n    case \"GET_EXPENSES\" :\r\n    return action.getExpenses;\r\n    default:\r\n      return expenses;\r\n  }\r\n};\r\n","// This is the filters reducer :\r\n\r\n//Default filters state\r\nconst filtersDefaultState = {\r\n  text: \"\",\r\n  sortBy: \"Date\",\r\n  startDate: '2000-01-01' ,\r\n  endDate: '2020-01-01'\r\n};\r\n\r\n\r\n//The filter reducer:\r\nexport default (filters = filtersDefaultState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_FILTER_TEXT\":\r\n      return {\r\n        ...filters,\r\n        text: action.text\r\n      };\r\n    case \"SET_START_DATE\":\r\n      return {\r\n        ...filters,\r\n        startDate: action.startDate\r\n      };\r\n    case \"SET_END_DATE\":\r\n      return {\r\n        ...filters,\r\n        endDate: action.endDate\r\n      };\r\n    case \"SET_FILTER_SORT_BY\":\r\n      return {\r\n        ...filters,\r\n        sortBy: action.sortBy\r\n      };\r\n    default:\r\n      return filters;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport expensesReducer from '../reducers/expensesReducer';\r\nimport filtersReducer from '../reducers/filtersReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst composeEnhansers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default () => {\r\n  const store = createStore(\r\n    combineReducers({\r\n      expenses: expensesReducer,\r\n      filters: filtersReducer\r\n    }),\r\n    composeEnhansers(applyMiddleware(thunk))\r\n  );\r\n  return store;\r\n};\r\n\r\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\nimport AppRouter from \"./AppRouter\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport configureStore from \"./store/configureStore\";\nimport { Provider } from \"react-redux\";\nimport { startGetExpense, createNewExpense } from \"./actions/expenses\";\n\nconst store = configureStore();\n\nstore.dispatch(startGetExpense());\n\nstore.subscribe(() => {\n  console.log(store.getState());\n});\n\nrender(\n  <Provider store={store}>\n    <AppRouter />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n//ReactDOM.render(<AppRouter />, document.getElementById(\"root\"));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}